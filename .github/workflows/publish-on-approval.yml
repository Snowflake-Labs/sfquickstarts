name: Publish to AEM on PR Approval (Prod)

on:
  pull_request_review:
    types: [submitted]

jobs:
  publish:
    # Only on approvals for PRs into master from branches in this repo
    if: >-
      github.event.review.state == 'approved' &&
      github.event.pull_request.base.ref == 'github-actions' &&
      github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    environment:
      name: production
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Determine changed quickstart folders
        id: detect
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          pr_number=${{ github.event.pull_request.number }}
          repo=${{ github.repository }}
          files_json=$(curl -sS -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$repo/pulls/$pr_number/files?per_page=100")
          quickstart_names=$(echo "$files_json" | jq -r '.[]?.filename | select(startswith("site/sfguides/src/")) | capture("^site/sfguides/src/(?<name>[^/]+)/").name' | sort -u)
          if [ -z "$quickstart_names" ]; then
            quickstart_names_json="[]"
            quickstart_folders_json="[]"
            quickstart_name=""
          else
            objs='[]'
            names_arr='[]'
            while IFS= read -r name; do
              [ -z "$name" ] && continue
              md_file=$(ls -1 "site/sfguides/src/$name"/*.md 2>/dev/null | head -n1 || true)
              lang=""
              if [ -n "$md_file" ] && [ -f "$md_file" ]; then
                lang=$(sed -n '1,50p' "$md_file" | grep -m1 -E '^[[:space:]]*language:[[:space:]]*' | sed -E 's/^[[:space:]]*language:[[:space:]]*//')
                lang=$(printf '%s' "$lang" | sed -E 's/^[[:space:]]+|[[:space:]]+$//g')
                if [[ "$lang" =~ ^\".*\"$ ]]; then lang=${lang:1:${#lang}-2}; fi
                if [[ "$lang" =~ ^\'.*\'$ ]]; then lang=${lang:1:${#lang}-2}; fi
              fi
              objs=$(echo "$objs" | jq -c --arg name "$name" --arg lang "$lang" '. + [{name:$name, language:$lang}]')
              names_arr=$(echo "$names_arr" | jq -c --arg name "$name" '. + [$name]')
            done <<< "$quickstart_names"
            quickstart_names_json="$objs"
            quickstart_folders_json=$(echo "$names_arr" | jq -c .)
            quickstart_name=$(printf '%s\n' "$quickstart_names" | head -n1)
          fi
          echo "quickstart_names_json=$quickstart_names_json" >> $GITHUB_OUTPUT
          echo "quickstart_folders_json=$quickstart_folders_json" >> $GITHUB_OUTPUT
          echo "quickstart_name=$quickstart_name" >> $GITHUB_OUTPUT

      - name: Call Workato production webhook
        env:
          WORKATO_PROD_WEBHOOK_URL: ${{ secrets.WORKATO_PROD_WEBHOOK_URL }}
        run: |
          payload=$(jq -n \
            --arg repo "$GITHUB_REPOSITORY" \
            --arg pr "${{ github.event.pull_request.number }}" \
            --arg sha "$GITHUB_SHA" \
            --arg env "prod" \
            --arg qname "${{ steps.detect.outputs.quickstart_name }}" \
            --argjson qnames '${{ steps.detect.outputs.quickstart_names_json }}' \
            --argjson qfolders '${{ steps.detect.outputs.quickstart_folders_json }}' \
            '{repo:$repo, pr_number: ($pr|tonumber), commit_sha:$sha, environment:$env, quickstart_name:$qname, quickstart_names:$qnames, quickstart_folders:$qfolders}')
          echo "$payload" | jq .
          response=$(curl -sS -X POST "$WORKATO_PROD_WEBHOOK_URL" -H "Content-Type: application/json" --data-raw "$payload")
          echo "$response" | cat

      - name: Comment PR with publish notice
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: 'Production publish triggered via PR approval.'
            });


