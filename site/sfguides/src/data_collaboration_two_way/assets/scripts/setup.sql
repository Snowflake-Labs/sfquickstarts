-- Setup script for the Hello Snowflake! application.


CREATE APPLICATION ROLE APP_PUBLIC;
CREATE SCHEMA IF NOT EXISTS CORE;
GRANT USAGE ON SCHEMA CORE TO APPLICATION ROLE APP_PUBLIC;


CREATE OR ALTER VERSIONED SCHEMA APP;
GRANT USAGE ON SCHEMA APP TO APPLICATION ROLE app_public;


--

CREATE OR REPLACE PROCEDURE CORE.TEST_PROC()
RETURNS STRING
LANGUAGE SQL
EXECUTE AS OWNER
AS
BEGIN
  RETURN 'Hello From Snowflake!';
END;

GRANT USAGE ON PROCEDURE CORE.TEST_PROC() TO APPLICATION ROLE APP_PUBLIC;

-- 

CREATE APPLICATION ROLE IF NOT EXISTS app_admin;

CREATE OR ALTER VERSIONED SCHEMA config;
GRANT USAGE ON SCHEMA config TO APPLICATION ROLE app_admin;

CREATE PROCEDURE CONFIG.REGISTER_SINGLE_REFERENCE(ref_name STRING, operation STRING, ref_or_alias STRING)
  RETURNS STRING
  LANGUAGE SQL
  AS $$
    BEGIN
      CASE (operation)
        WHEN 'ADD' THEN
          SELECT SYSTEM$SET_REFERENCE(:ref_name, :ref_or_alias);
        WHEN 'REMOVE' THEN
          SELECT SYSTEM$REMOVE_REFERENCE(:ref_name);
        WHEN 'CLEAR' THEN
          SELECT SYSTEM$REMOVE_REFERENCE(:ref_name);
      ELSE
        RETURN 'unknown operation: ' || operation;
      END CASE;
      RETURN NULL;
    END;
  $$;

GRANT USAGE ON PROCEDURE CONFIG.REGISTER_SINGLE_REFERENCE(STRING, STRING, STRING)
  TO APPLICATION ROLE app_admin;


CREATE PROCEDURE CONFIG.CREATE_TABLE_FROM_REFERENCE_RAW()
  RETURNS STRING
  LANGUAGE SQL
  AS $$
   CREATE OR REPLACE TABLE CONFIG.RAW_TABLE AS
    SELECT * FROM reference('RAW_TABLE');
  $$;

GRANT USAGE ON PROCEDURE CONFIG.CREATE_TABLE_FROM_REFERENCE_RAW()
  TO APPLICATION ROLE app_admin;

CREATE TABLE IF NOT EXISTS CONFIG.RAW_TABLE (
	S_15 FLOAT,
	B_23 FLOAT,
	D_73 FLOAT,
	P_4 FLOAT,
	D_74 FLOAT,
	D_75 FLOAT,
	D_76 FLOAT,
	B_24 FLOAT,
	R_7 FLOAT,
	D_77 FLOAT,
	B_25 FLOAT,
	B_26 FLOAT,
	D_78 FLOAT,
	D_79 FLOAT,
	R_8 FLOAT,
	R_9 FLOAT,
	S_16 FLOAT,
	D_80 FLOAT,
	R_10 FLOAT,
	R_11 FLOAT,
	B_27 NUMBER(38,0),
	D_81 FLOAT,
	D_82 FLOAT,
	S_17 FLOAT,
	S_2 NUMBER(38,0),
	P_2 FLOAT,
	D_39 FLOAT,
	B_1 FLOAT,
	B_2 FLOAT,
	R_1 FLOAT,
	S_3 FLOAT,
	D_41 FLOAT,
	B_3 FLOAT,
	D_42 FLOAT,
	D_43 FLOAT,
	D_44 FLOAT,
	B_4 FLOAT,
	D_45 FLOAT,
	B_5 FLOAT,
	R_2 NUMBER(38,0),
	D_46 FLOAT,
	D_47 FLOAT,
	D_48 FLOAT,
	D_49 FLOAT,
	B_6 FLOAT,
	B_7 FLOAT,
	B_8 NUMBER(38,0),
	D_89 NUMBER(38,0),
	R_22 NUMBER(38,0),
	R_23 NUMBER(38,0),
	D_91 FLOAT,
	D_92 FLOAT,
	D_93 NUMBER(38,0),
	D_94 NUMBER(38,0),
	R_24 NUMBER(38,0),
	R_25 NUMBER(38,0),
	D_96 NUMBER(38,0),
	S_22 FLOAT,
	S_23 FLOAT,
	S_24 FLOAT,
	S_25 FLOAT,
	S_26 FLOAT,
	D_102 FLOAT,
	D_103 NUMBER(38,0),
	D_104 FLOAT,
	D_105 FLOAT,
	D_106 FLOAT,
	D_107 FLOAT,
	B_36 NUMBER(38,0),
	B_37 FLOAT,
	R_26 FLOAT,
	R_27 NUMBER(38,0),
	B_38 NUMBER(38,0),
	D_108 FLOAT,
	D_109 NUMBER(38,0),
	D_110 FLOAT,
	D_111 FLOAT,
	B_39 FLOAT,
	D_112 NUMBER(38,0),
	B_40 FLOAT,
	S_27 FLOAT,
	D_113 FLOAT,
	D_114 NUMBER(38,0),
	D_115 FLOAT,
	D_116 NUMBER(38,0),
	D_117 NUMBER(38,0),
	D_118 FLOAT,
	D_119 FLOAT,
	D_120 NUMBER(38,0),
	D_121 FLOAT,
	D_122 FLOAT,
	D_123 FLOAT,
	D_124 FLOAT,
	D_125 FLOAT,
	D_126 NUMBER(38,0),
	D_50 FLOAT,
	D_51 FLOAT,
	B_9 FLOAT,
	R_3 FLOAT,
	D_52 FLOAT,
	P_3 FLOAT,
	B_10 FLOAT,
	D_53 FLOAT,
	S_5 FLOAT,
	B_11 FLOAT,
	S_6 NUMBER(38,0),
	D_54 NUMBER(38,0),
	R_4 NUMBER(38,0),
	S_7 FLOAT,
	B_12 FLOAT,
	S_8 FLOAT,
	D_55 FLOAT,
	D_56 FLOAT,
	B_13 FLOAT,
	R_5 FLOAT,
	D_58 FLOAT,
	S_9 FLOAT,
	B_14 FLOAT,
	D_59 FLOAT,
	R_12 FLOAT,
	B_28 FLOAT,
	R_13 NUMBER(38,0),
	D_83 FLOAT,
	R_14 FLOAT,
	R_15 NUMBER(38,0),
	D_84 FLOAT,
	R_16 FLOAT,
	B_29 FLOAT,
	B_30 NUMBER(38,0),
	S_18 NUMBER(38,0),
	D_86 NUMBER(38,0),
	D_87 NUMBER(38,0),
	R_17 NUMBER(38,0),
	R_18 NUMBER(38,0),
	D_88 FLOAT,
	B_31 NUMBER(38,0),
	S_19 NUMBER(38,0),
	R_19 NUMBER(38,0),
	B_32 NUMBER(38,0),
	S_20 NUMBER(38,0),
	R_20 FLOAT,
	R_21 NUMBER(38,0),
	B_33 NUMBER(38,0),
	D_60 FLOAT,
	D_61 FLOAT,
	B_15 FLOAT,
	S_11 FLOAT,
	D_62 FLOAT,
	D_63 NUMBER(38,0),
	D_64 NUMBER(38,0),
	D_65 FLOAT,
	B_16 FLOAT,
	B_17 FLOAT,
	B_18 FLOAT,
	B_19 FLOAT,
	D_66 NUMBER(38,0),
	B_20 FLOAT,
	D_68 NUMBER(38,0),
	S_12 FLOAT,
	R_6 FLOAT,
	S_13 FLOAT,
	B_21 FLOAT,
	D_69 FLOAT,
	B_22 FLOAT,
	D_70 FLOAT,
	D_71 FLOAT,
	D_72 FLOAT,
	D_127 NUMBER(38,0),
	D_128 NUMBER(38,0),
	D_129 NUMBER(38,0),
	B_41 FLOAT,
	B_42 FLOAT,
	D_130 NUMBER(38,0),
	D_131 FLOAT,
	D_132 FLOAT,
	D_133 FLOAT,
	R_28 NUMBER(38,0),
	D_134 FLOAT,
	D_135 NUMBER(38,0),
	D_136 FLOAT,
	D_137 NUMBER(38,0),
	D_138 FLOAT,
	D_139 NUMBER(38,0),
	D_140 NUMBER(38,0),
	D_141 FLOAT,
	D_142 FLOAT,
	D_143 NUMBER(38,0),
	D_144 FLOAT,
	D_145 FLOAT,
	"customer_ID" VARCHAR(16777216)
);

CREATE VIEW CONFIG.RAW_TABLE_VIEW AS SELECT * FROM CONFIG.RAW_TABLE;

GRANT SELECT ON VIEW CONFIG.RAW_TABLE_VIEW TO APPLICATION ROLE app_admin;

create or replace TABLE CONFIG.TRANSFORMED_TABLE (
	"customer_ID" VARCHAR(16777216),
	B_2_MIN FLOAT,
	B_4_MIN FLOAT,
	B_5_MIN FLOAT,
	B_9_MIN FLOAT,
	B_13_MIN FLOAT,
	B_14_MIN FLOAT,
	B_15_MIN FLOAT,
	B_16_MIN FLOAT,
	B_17_MIN FLOAT,
	B_19_MIN FLOAT,
	B_20_MIN FLOAT,
	B_28_MIN FLOAT,
	B_29_MIN FLOAT,
	B_33_MIN FLOAT,
	B_36_MIN FLOAT,
	B_42_MIN FLOAT,
	D_39_MIN FLOAT,
	D_41_MIN FLOAT,
	D_42_MIN FLOAT,
	D_45_MIN FLOAT,
	D_46_MIN FLOAT,
	D_48_MIN FLOAT,
	D_50_MIN FLOAT,
	D_51_MIN FLOAT,
	D_53_MIN FLOAT,
	D_55_MIN FLOAT,
	D_56_MIN FLOAT,
	D_58_MIN FLOAT,
	D_59_MIN FLOAT,
	D_60_MIN FLOAT,
	D_62_MIN FLOAT,
	D_70_MIN FLOAT,
	D_71_MIN FLOAT,
	D_74_MIN FLOAT,
	D_75_MIN FLOAT,
	D_78_MIN FLOAT,
	D_83_MIN FLOAT,
	D_102_MIN FLOAT,
	D_112_MIN FLOAT,
	D_113_MIN FLOAT,
	D_115_MIN FLOAT,
	D_118_MIN FLOAT,
	D_119_MIN FLOAT,
	D_121_MIN FLOAT,
	D_122_MIN FLOAT,
	D_128_MIN FLOAT,
	D_132_MIN FLOAT,
	D_140_MIN FLOAT,
	D_141_MIN FLOAT,
	D_144_MIN FLOAT,
	D_145_MIN FLOAT,
	P_2_MIN FLOAT,
	P_3_MIN FLOAT,
	R_1_MIN FLOAT,
	R_27_MIN FLOAT,
	S_3_MIN FLOAT,
	S_5_MIN FLOAT,
	S_7_MIN FLOAT,
	S_9_MIN FLOAT,
	S_11_MIN FLOAT,
	S_12_MIN FLOAT,
	S_23_MIN FLOAT,
	S_25_MIN FLOAT,
	B_1_AVG FLOAT,
	B_2_AVG FLOAT,
	B_3_AVG FLOAT,
	B_4_AVG FLOAT,
	B_5_AVG FLOAT,
	B_6_AVG FLOAT,
	B_8_AVG FLOAT,
	B_9_AVG FLOAT,
	B_10_AVG FLOAT,
	B_11_AVG FLOAT,
	B_12_AVG FLOAT,
	B_13_AVG FLOAT,
	B_14_AVG FLOAT,
	B_15_AVG FLOAT,
	B_16_AVG FLOAT,
	B_17_AVG FLOAT,
	B_18_AVG FLOAT,
	B_19_AVG FLOAT,
	B_20_AVG FLOAT,
	B_21_AVG FLOAT,
	B_22_AVG FLOAT,
	B_23_AVG FLOAT,
	B_24_AVG FLOAT,
	B_25_AVG FLOAT,
	B_28_AVG FLOAT,
	B_29_AVG FLOAT,
	B_30_AVG FLOAT,
	B_32_AVG FLOAT,
	B_33_AVG FLOAT,
	B_37_AVG FLOAT,
	B_38_AVG FLOAT,
	B_39_AVG FLOAT,
	B_40_AVG FLOAT,
	B_41_AVG FLOAT,
	B_42_AVG FLOAT,
	D_39_AVG FLOAT,
	D_41_AVG FLOAT,
	D_42_AVG FLOAT,
	D_43_AVG FLOAT,
	D_44_AVG FLOAT,
	D_45_AVG FLOAT,
	D_46_AVG FLOAT,
	D_47_AVG FLOAT,
	D_48_AVG FLOAT,
	D_50_AVG FLOAT,
	D_51_AVG FLOAT,
	D_53_AVG FLOAT,
	D_54_AVG FLOAT,
	D_55_AVG FLOAT,
	D_58_AVG FLOAT,
	D_59_AVG FLOAT,
	D_60_AVG FLOAT,
	D_61_AVG FLOAT,
	D_62_AVG FLOAT,
	D_65_AVG FLOAT,
	D_66_AVG FLOAT,
	D_69_AVG FLOAT,
	D_70_AVG FLOAT,
	D_71_AVG FLOAT,
	D_72_AVG FLOAT,
	D_73_AVG FLOAT,
	D_74_AVG FLOAT,
	D_75_AVG FLOAT,
	D_76_AVG FLOAT,
	D_77_AVG FLOAT,
	D_78_AVG FLOAT,
	D_80_AVG FLOAT,
	D_82_AVG FLOAT,
	D_84_AVG FLOAT,
	D_86_AVG FLOAT,
	D_91_AVG FLOAT,
	D_92_AVG FLOAT,
	D_94_AVG FLOAT,
	D_96_AVG FLOAT,
	D_103_AVG FLOAT,
	D_104_AVG FLOAT,
	D_108_AVG FLOAT,
	D_112_AVG FLOAT,
	D_113_AVG FLOAT,
	D_114_AVG FLOAT,
	D_115_AVG FLOAT,
	D_117_AVG FLOAT,
	D_118_AVG FLOAT,
	D_119_AVG FLOAT,
	D_120_AVG FLOAT,
	D_121_AVG FLOAT,
	D_122_AVG FLOAT,
	D_123_AVG FLOAT,
	D_124_AVG FLOAT,
	D_125_AVG FLOAT,
	D_126_AVG FLOAT,
	D_128_AVG FLOAT,
	D_129_AVG FLOAT,
	D_131_AVG FLOAT,
	D_132_AVG FLOAT,
	D_133_AVG FLOAT,
	D_134_AVG FLOAT,
	D_135_AVG FLOAT,
	D_136_AVG FLOAT,
	D_140_AVG FLOAT,
	D_141_AVG FLOAT,
	D_142_AVG FLOAT,
	D_144_AVG FLOAT,
	D_145_AVG FLOAT,
	P_2_AVG FLOAT,
	P_3_AVG FLOAT,
	P_4_AVG FLOAT,
	R_1_AVG FLOAT,
	R_2_AVG FLOAT,
	R_3_AVG FLOAT,
	R_7_AVG FLOAT,
	R_8_AVG FLOAT,
	R_9_AVG FLOAT,
	R_10_AVG FLOAT,
	R_11_AVG FLOAT,
	R_14_AVG FLOAT,
	R_15_AVG FLOAT,
	R_16_AVG FLOAT,
	R_17_AVG FLOAT,
	R_20_AVG FLOAT,
	R_21_AVG FLOAT,
	R_22_AVG FLOAT,
	R_24_AVG FLOAT,
	R_26_AVG FLOAT,
	R_27_AVG FLOAT,
	S_3_AVG FLOAT,
	S_5_AVG FLOAT,
	S_6_AVG FLOAT,
	S_7_AVG FLOAT,
	S_9_AVG FLOAT,
	S_11_AVG FLOAT,
	S_12_AVG FLOAT,
	S_13_AVG FLOAT,
	S_15_AVG FLOAT,
	S_16_AVG FLOAT,
	S_18_AVG FLOAT,
	S_22_AVG FLOAT,
	S_23_AVG FLOAT,
	S_25_AVG FLOAT,
	S_26_AVG FLOAT,
	B_1_MAX FLOAT,
	B_2_MAX FLOAT,
	B_3_MAX FLOAT,
	B_4_MAX FLOAT,
	B_5_MAX FLOAT,
	B_6_MAX FLOAT,
	B_7_MAX FLOAT,
	B_8_MAX FLOAT,
	B_9_MAX FLOAT,
	B_10_MAX FLOAT,
	B_12_MAX FLOAT,
	B_13_MAX FLOAT,
	B_14_MAX FLOAT,
	B_15_MAX FLOAT,
	B_16_MAX FLOAT,
	B_17_MAX FLOAT,
	B_18_MAX FLOAT,
	B_19_MAX FLOAT,
	B_21_MAX FLOAT,
	B_23_MAX FLOAT,
	B_24_MAX FLOAT,
	B_25_MAX FLOAT,
	B_29_MAX FLOAT,
	B_30_MAX FLOAT,
	B_33_MAX FLOAT,
	B_37_MAX FLOAT,
	B_38_MAX FLOAT,
	B_39_MAX FLOAT,
	B_40_MAX FLOAT,
	B_42_MAX FLOAT,
	D_39_MAX FLOAT,
	D_41_MAX FLOAT,
	D_42_MAX FLOAT,
	D_43_MAX FLOAT,
	D_44_MAX FLOAT,
	D_45_MAX FLOAT,
	D_46_MAX FLOAT,
	D_47_MAX FLOAT,
	D_48_MAX FLOAT,
	D_49_MAX FLOAT,
	D_50_MAX FLOAT,
	D_52_MAX FLOAT,
	D_55_MAX FLOAT,
	D_56_MAX FLOAT,
	D_58_MAX FLOAT,
	D_59_MAX FLOAT,
	D_60_MAX FLOAT,
	D_61_MAX FLOAT,
	D_63_MAX FLOAT,
	D_64_MAX FLOAT,
	D_65_MAX FLOAT,
	D_70_MAX FLOAT,
	D_71_MAX FLOAT,
	D_72_MAX FLOAT,
	D_73_MAX FLOAT,
	D_74_MAX FLOAT,
	D_76_MAX FLOAT,
	D_77_MAX FLOAT,
	D_78_MAX FLOAT,
	D_80_MAX FLOAT,
	D_82_MAX FLOAT,
	D_84_MAX FLOAT,
	D_91_MAX FLOAT,
	D_102_MAX FLOAT,
	D_105_MAX FLOAT,
	D_107_MAX FLOAT,
	D_110_MAX FLOAT,
	D_111_MAX FLOAT,
	D_112_MAX FLOAT,
	D_115_MAX FLOAT,
	D_116_MAX FLOAT,
	D_117_MAX FLOAT,
	D_118_MAX FLOAT,
	D_119_MAX FLOAT,
	D_121_MAX FLOAT,
	D_122_MAX FLOAT,
	D_123_MAX FLOAT,
	D_124_MAX FLOAT,
	D_125_MAX FLOAT,
	D_126_MAX FLOAT,
	D_128_MAX FLOAT,
	D_131_MAX FLOAT,
	D_132_MAX FLOAT,
	D_133_MAX FLOAT,
	D_134_MAX FLOAT,
	D_135_MAX FLOAT,
	D_136_MAX FLOAT,
	D_138_MAX FLOAT,
	D_140_MAX FLOAT,
	D_141_MAX FLOAT,
	D_142_MAX FLOAT,
	D_144_MAX FLOAT,
	D_145_MAX FLOAT,
	P_2_MAX FLOAT,
	P_3_MAX FLOAT,
	P_4_MAX FLOAT,
	R_1_MAX FLOAT,
	R_3_MAX FLOAT,
	R_5_MAX FLOAT,
	R_6_MAX FLOAT,
	R_7_MAX FLOAT,
	R_8_MAX FLOAT,
	R_10_MAX FLOAT,
	R_11_MAX FLOAT,
	R_14_MAX FLOAT,
	R_17_MAX FLOAT,
	R_20_MAX FLOAT,
	R_26_MAX FLOAT,
	R_27_MAX FLOAT,
	S_3_MAX FLOAT,
	S_5_MAX FLOAT,
	S_7_MAX FLOAT,
	S_8_MAX FLOAT,
	S_11_MAX FLOAT,
	S_12_MAX FLOAT,
	S_13_MAX FLOAT,
	S_15_MAX FLOAT,
	S_16_MAX FLOAT,
	S_22_MAX FLOAT,
	S_23_MAX FLOAT,
	S_24_MAX FLOAT,
	S_25_MAX FLOAT,
	S_26_MAX FLOAT,
	S_27_MAX FLOAT,
	B_1 FLOAT,
	B_2 FLOAT,
	B_3 FLOAT,
	B_4 FLOAT,
	B_5 FLOAT,
	B_6 FLOAT,
	B_7 FLOAT,
	B_8 FLOAT,
	B_9 FLOAT,
	B_10 FLOAT,
	B_11 FLOAT,
	B_12 FLOAT,
	B_13 FLOAT,
	B_14 FLOAT,
	B_15 FLOAT,
	B_16 FLOAT,
	B_17 FLOAT,
	B_18 FLOAT,
	B_19 FLOAT,
	B_20 FLOAT,
	B_21 FLOAT,
	B_22 FLOAT,
	B_23 FLOAT,
	B_24 FLOAT,
	B_25 FLOAT,
	B_26 FLOAT,
	B_28 FLOAT,
	B_29 FLOAT,
	B_30 FLOAT,
	B_32 FLOAT,
	B_33 FLOAT,
	B_36 FLOAT,
	B_37 FLOAT,
	B_38 FLOAT,
	B_39 FLOAT,
	B_40 FLOAT,
	B_41 FLOAT,
	B_42 FLOAT,
	D_39 FLOAT,
	D_41 FLOAT,
	D_42 FLOAT,
	D_43 FLOAT,
	D_44 FLOAT,
	D_45 FLOAT,
	D_46 FLOAT,
	D_47 FLOAT,
	D_48 FLOAT,
	D_49 FLOAT,
	D_50 FLOAT,
	D_51 FLOAT,
	D_52 FLOAT,
	D_53 FLOAT,
	D_54 FLOAT,
	D_55 FLOAT,
	D_56 FLOAT,
	D_58 FLOAT,
	D_59 FLOAT,
	D_60 FLOAT,
	D_61 FLOAT,
	D_62 FLOAT,
	D_63 FLOAT,
	D_64 FLOAT,
	D_65 FLOAT,
	D_69 FLOAT,
	D_70 FLOAT,
	D_71 FLOAT,
	D_72 FLOAT,
	D_73 FLOAT,
	D_75 FLOAT,
	D_76 FLOAT,
	D_77 FLOAT,
	D_78 FLOAT,
	D_79 FLOAT,
	D_80 FLOAT,
	D_81 FLOAT,
	D_82 FLOAT,
	D_83 FLOAT,
	D_86 FLOAT,
	D_91 FLOAT,
	D_96 FLOAT,
	D_105 FLOAT,
	D_106 FLOAT,
	D_112 FLOAT,
	D_114 FLOAT,
	D_119 FLOAT,
	D_120 FLOAT,
	D_121 FLOAT,
	D_122 FLOAT,
	D_124 FLOAT,
	D_125 FLOAT,
	D_126 FLOAT,
	D_127 FLOAT,
	D_130 FLOAT,
	D_131 FLOAT,
	D_132 FLOAT,
	D_133 FLOAT,
	D_134 FLOAT,
	D_138 FLOAT,
	D_140 FLOAT,
	D_141 FLOAT,
	D_142 FLOAT,
	D_145 FLOAT,
	P_2 FLOAT,
	P_3 FLOAT,
	P_4 FLOAT,
	R_1 FLOAT,
	R_2 FLOAT,
	R_3 FLOAT,
	R_4 FLOAT,
	R_5 FLOAT,
	R_6 FLOAT,
	R_7 FLOAT,
	R_8 FLOAT,
	R_9 FLOAT,
	R_10 FLOAT,
	R_11 FLOAT,
	R_12 FLOAT,
	R_13 FLOAT,
	R_14 FLOAT,
	R_15 FLOAT,
	R_19 FLOAT,
	R_20 FLOAT,
	R_26 FLOAT,
	R_27 FLOAT,
	S_3 FLOAT,
	S_5 FLOAT,
	S_6 FLOAT,
	S_7 FLOAT,
	S_8 FLOAT,
	S_9 FLOAT,
	S_11 FLOAT,
	S_12 FLOAT,
	S_13 FLOAT,
	S_16 FLOAT,
	S_19 FLOAT,
	S_20 FLOAT,
	S_22 FLOAT,
	S_23 FLOAT,
	S_24 FLOAT,
	S_25 FLOAT,
	S_26 FLOAT,
	S_27 FLOAT
);

CREATE VIEW CONFIG.TRANSFORMED_TABLE_VIEW AS SELECT * FROM CONFIG.TRANSFORMED_TABLE;

GRANT SELECT ON VIEW CONFIG.TRANSFORMED_TABLE_VIEW TO APPLICATION ROLE app_admin;

create or replace TABLE CONFIG.SCORED_TABLE (
	"customer_ID" VARCHAR(16777216),
	PREDICTION FLOAT
);

CREATE VIEW CONFIG.SCORED_TABLE_VIEW AS SELECT * FROM CONFIG.SCORED_TABLE;

GRANT SELECT ON VIEW CONFIG.SCORED_TABLE_VIEW TO APPLICATION ROLE app_admin;

--

CREATE OR REPLACE PROCEDURE CORE.cc_profile_processing(rawTable VARCHAR, targetTable VARCHAR, imputeTable VARCHAR)
RETURNS STRING
LANGUAGE PYTHON
RUNTIME_VERSION = '3.8'
PACKAGES = ('snowflake-snowpark-python', 'snowflake-ml-python')
HANDLER = 'feature_transform'
AS
$$
import snowflake.snowpark as snp
import snowflake.snowpark.window as W
import snowflake.snowpark.functions as F
import snowflake.snowpark.types as T
import snowflake.ml.modeling.impute as I

def feature_transform(session, raw_table, target_table, impute_table):
    input_df = session.table(raw_table)
    impute_df = session.table(impute_table)
    feature_cols = input_df.columns
    feature_cols.remove('"customer_ID"')

    for col_name in feature_cols:
        input_df = input_df.withColumn(col_name, F.col(col_name).cast(T.FloatType()))

    my_imputer = I.SimpleImputer(input_cols= feature_cols,
                           output_cols= feature_cols,
                           strategy='most_frequent')
    my_imputer.fit(impute_df)
    input_df = my_imputer.transform(input_df)
    
    # Feature engineer raw input
    #Average
    features_avg = ['B_1', 'B_2', 'B_3', 'B_4', 'B_5', 'B_6', 'B_8', 'B_9', 'B_10', 'B_11', 'B_12', 'B_13', 'B_14', 'B_15', 'B_16', 'B_17', 'B_18', 'B_19', 'B_20', 'B_21', 'B_22', 'B_23', 'B_24', 'B_25', 'B_28', 'B_29', 'B_30', 'B_32', 'B_33', 'B_37', 'B_38', 'B_39', 'B_40', 'B_41', 'B_42', 'D_39', 'D_41', 'D_42', 'D_43', 'D_44', 'D_45', 'D_46', 'D_47', 'D_48', 'D_50', 'D_51', 'D_53', 'D_54', 'D_55', 'D_58', 'D_59', 'D_60', 'D_61', 'D_62', 'D_65', 'D_66', 'D_69', 'D_70', 'D_71', 'D_72', 'D_73', 'D_74', 'D_75', 'D_76', 'D_77', 'D_78', 'D_80', 'D_82', 'D_84', 'D_86', 'D_91', 'D_92', 'D_94', 'D_96', 'D_103', 'D_104', 'D_108', 'D_112', 'D_113', 'D_114', 'D_115', 'D_117', 'D_118', 'D_119', 'D_120', 'D_121', 'D_122', 'D_123', 'D_124', 'D_125', 'D_126', 'D_128', 'D_129', 'D_131', 'D_132', 'D_133', 'D_134', 'D_135', 'D_136', 'D_140', 'D_141', 'D_142', 'D_144', 'D_145', 'P_2', 'P_3', 'P_4', 'R_1', 'R_2', 'R_3', 'R_7', 'R_8', 'R_9', 'R_10', 'R_11', 'R_14', 'R_15', 'R_16', 'R_17', 'R_20', 'R_21', 'R_22', 'R_24', 'R_26', 'R_27', 'S_3', 'S_5', 'S_6', 'S_7', 'S_9', 'S_11', 'S_12', 'S_13', 'S_15', 'S_16', 'S_18', 'S_22', 'S_23', 'S_25', 'S_26']
    feat = [F.col(c) for c in features_avg]
    exprs = {x: "avg" for x in features_avg}
    df_avg = (input_df
          .groupBy('"customer_ID"')
          .agg(exprs)
          .rename({F.col(f"AVG({f})"): f"{f}_avg" for f in features_avg})
         )
    
    # Minimum
    features_min = ['B_2', 'B_4', 'B_5', 'B_9', 'B_13', 'B_14', 'B_15', 'B_16', 'B_17', 'B_19', 'B_20', 'B_28', 'B_29', 'B_33', 'B_36', 'B_42', 'D_39', 'D_41', 'D_42', 'D_45', 'D_46', 'D_48', 'D_50', 'D_51', 'D_53', 'D_55', 'D_56', 'D_58', 'D_59', 'D_60', 'D_62', 'D_70', 'D_71', 'D_74', 'D_75', 'D_78', 'D_83', 'D_102', 'D_112', 'D_113', 'D_115', 'D_118', 'D_119', 'D_121', 'D_122', 'D_128', 'D_132', 'D_140', 'D_141', 'D_144', 'D_145', 'P_2', 'P_3', 'R_1', 'R_27', 'S_3', 'S_5', 'S_7', 'S_9', 'S_11', 'S_12', 'S_23', 'S_25']
    exprs_min = {x: "min" for x in features_min}
    df_min = (input_df
          .groupBy('"customer_ID"')
          .agg(exprs_min)
          .rename({F.col(f"MIN({f})"): f"{f}_min" for f in features_min})
         )
    
    # Maximum
    features_max = ['B_1', 'B_2', 'B_3', 'B_4', 'B_5', 'B_6', 'B_7', 'B_8', 'B_9', 'B_10', 'B_12', 'B_13', 'B_14', 'B_15', 'B_16', 'B_17', 'B_18', 'B_19', 'B_21', 'B_23', 'B_24', 'B_25', 'B_29', 'B_30', 'B_33', 'B_37', 'B_38', 'B_39', 'B_40', 'B_42', 'D_39', 'D_41', 'D_42', 'D_43', 'D_44', 'D_45', 'D_46', 'D_47', 'D_48', 'D_49', 'D_50', 'D_52', 'D_55', 'D_56', 'D_58', 'D_59', 'D_60', 'D_61', 'D_63', 'D_64', 'D_65', 'D_70', 'D_71', 'D_72', 'D_73', 'D_74', 'D_76', 'D_77', 'D_78', 'D_80', 'D_82', 'D_84', 'D_91', 'D_102', 'D_105', 'D_107', 'D_110', 'D_111', 'D_112', 'D_115', 'D_116', 'D_117', 'D_118', 'D_119', 'D_121', 'D_122', 'D_123', 'D_124', 'D_125', 'D_126', 'D_128', 'D_131', 'D_132', 'D_133', 'D_134', 'D_135', 'D_136', 'D_138', 'D_140', 'D_141', 'D_142', 'D_144', 'D_145', 'P_2', 'P_3', 'P_4', 'R_1', 'R_3', 'R_5', 'R_6', 'R_7', 'R_8', 'R_10', 'R_11', 'R_14', 'R_17', 'R_20', 'R_26', 'R_27', 'S_3', 'S_5', 'S_7', 'S_8', 'S_11', 'S_12', 'S_13', 'S_15', 'S_16', 'S_22', 'S_23', 'S_24', 'S_25', 'S_26', 'S_27']
    exprs_max = {x: "max" for x in features_max}
    df_max = (input_df
          .groupBy('"customer_ID"')
          .agg(exprs_max)
          .rename({F.col(f"MAX({f})"): f"{f}_max" for f in features_max})
         )
    
    # Last
    features_last = ['B_1', 'B_2', 'B_3', 'B_4', 'B_5', 'B_6', 'B_7', 'B_8', 'B_9', 'B_10', 'B_11', 'B_12', 'B_13', 'B_14', 'B_15', 'B_16', 'B_17', 'B_18', 'B_19', 'B_20', 'B_21', 'B_22', 'B_23', 'B_24', 'B_25', 'B_26', 'B_28', 'B_29', 'B_30', 'B_32', 'B_33', 'B_36', 'B_37', 'B_38', 'B_39', 'B_40', 'B_41', 'B_42', 'D_39', 'D_41', 'D_42', 'D_43', 'D_44', 'D_45', 'D_46', 'D_47', 'D_48', 'D_49', 'D_50', 'D_51', 'D_52', 'D_53', 'D_54', 'D_55', 'D_56', 'D_58', 'D_59', 'D_60', 'D_61', 'D_62', 'D_63', 'D_64', 'D_65', 'D_69', 'D_70', 'D_71', 'D_72', 'D_73', 'D_75', 'D_76', 'D_77', 'D_78', 'D_79', 'D_80', 'D_81', 'D_82', 'D_83', 'D_86', 'D_91', 'D_96', 'D_105', 'D_106', 'D_112', 'D_114', 'D_119', 'D_120', 'D_121', 'D_122', 'D_124', 'D_125', 'D_126', 'D_127', 'D_130', 'D_131', 'D_132', 'D_133', 'D_134', 'D_138', 'D_140', 'D_141', 'D_142', 'D_145', 'P_2', 'P_3', 'P_4', 'R_1', 'R_2', 'R_3', 'R_4', 'R_5', 'R_6', 'R_7', 'R_8', 'R_9', 'R_10', 'R_11', 'R_12', 'R_13', 'R_14', 'R_15', 'R_19', 'R_20', 'R_26', 'R_27', 'S_3', 'S_5', 'S_6', 'S_7', 'S_8', 'S_9', 'S_11', 'S_12', 'S_13', 'S_16', 'S_19', 'S_20', 'S_22', 'S_23', 'S_24', 'S_25', 'S_26', 'S_27', '"customer_ID"']
    w = snp.Window.partition_by('"customer_ID"').order_by(F.col('S_2').desc())
    df_last = input_df.withColumn("rn", F.row_number().over(w)).filter("rn = 1").select(features_last)
    
    # Join
    feature_df = df_min.natural_join(df_avg)
    feature_df = feature_df.natural_join(df_max)
    feature_df = feature_df.natural_join(df_last)

    feature_df.write.save_as_table(target_table, mode="overwrite")
    
    return "Success"
$$;

GRANT USAGE ON PROCEDURE CORE.cc_profile_processing(VARCHAR, VARCHAR, VARCHAR) TO APPLICATION ROLE app_public;

--

Create or replace function app.batch_predict_cc_default(ARG1 FLOAT,
ARG2 FLOAT,
ARG3 FLOAT,
ARG4 FLOAT,
ARG5 FLOAT,
ARG6 FLOAT,
ARG7 FLOAT,
ARG8 FLOAT,
ARG9 FLOAT,
ARG10 FLOAT,
ARG11 FLOAT,
ARG12 FLOAT,
ARG13 FLOAT,
ARG14 FLOAT,
ARG15 FLOAT,
ARG16 FLOAT,
ARG17 FLOAT,
ARG18 FLOAT,
ARG19 FLOAT,
ARG20 FLOAT,
ARG21 FLOAT,
ARG22 FLOAT,
ARG23 FLOAT,
ARG24 FLOAT,
ARG25 FLOAT,
ARG26 FLOAT,
ARG27 FLOAT,
ARG28 FLOAT,
ARG29 FLOAT,
ARG30 FLOAT,
ARG31 FLOAT,
ARG32 FLOAT,
ARG33 FLOAT,
ARG34 FLOAT,
ARG35 FLOAT,
ARG36 FLOAT,
ARG37 FLOAT,
ARG38 FLOAT,
ARG39 FLOAT,
ARG40 FLOAT,
ARG41 FLOAT,
ARG42 FLOAT,
ARG43 FLOAT,
ARG44 FLOAT,
ARG45 FLOAT,
ARG46 FLOAT,
ARG47 FLOAT,
ARG48 FLOAT,
ARG49 FLOAT,
ARG50 FLOAT,
ARG51 FLOAT,
ARG52 FLOAT,
ARG53 FLOAT,
ARG54 FLOAT,
ARG55 FLOAT,
ARG56 FLOAT,
ARG57 FLOAT,
ARG58 FLOAT,
ARG59 FLOAT,
ARG60 FLOAT,
ARG61 FLOAT,
ARG62 FLOAT,
ARG63 FLOAT,
ARG64 FLOAT,
ARG65 FLOAT,
ARG66 FLOAT,
ARG67 FLOAT,
ARG68 FLOAT,
ARG69 FLOAT,
ARG70 FLOAT,
ARG71 FLOAT,
ARG72 FLOAT,
ARG73 FLOAT,
ARG74 FLOAT,
ARG75 FLOAT,
ARG76 FLOAT,
ARG77 FLOAT,
ARG78 FLOAT,
ARG79 FLOAT,
ARG80 FLOAT,
ARG81 FLOAT,
ARG82 FLOAT,
ARG83 FLOAT,
ARG84 FLOAT,
ARG85 FLOAT,
ARG86 FLOAT,
ARG87 FLOAT,
ARG88 FLOAT,
ARG89 FLOAT,
ARG90 FLOAT,
ARG91 FLOAT,
ARG92 FLOAT,
ARG93 FLOAT,
ARG94 FLOAT,
ARG95 FLOAT,
ARG96 FLOAT,
ARG97 FLOAT,
ARG98 FLOAT,
ARG99 FLOAT,
ARG100 FLOAT,
ARG101 FLOAT,
ARG102 FLOAT,
ARG103 FLOAT,
ARG104 FLOAT,
ARG105 FLOAT,
ARG106 FLOAT,
ARG107 FLOAT,
ARG108 FLOAT,
ARG109 FLOAT,
ARG110 FLOAT,
ARG111 FLOAT,
ARG112 FLOAT,
ARG113 FLOAT,
ARG114 FLOAT,
ARG115 FLOAT,
ARG116 FLOAT,
ARG117 FLOAT,
ARG118 FLOAT,
ARG119 FLOAT,
ARG120 FLOAT,
ARG121 FLOAT,
ARG122 FLOAT,
ARG123 FLOAT,
ARG124 FLOAT,
ARG125 FLOAT,
ARG126 FLOAT,
ARG127 FLOAT,
ARG128 FLOAT,
ARG129 FLOAT,
ARG130 FLOAT,
ARG131 FLOAT,
ARG132 FLOAT,
ARG133 FLOAT,
ARG134 FLOAT,
ARG135 FLOAT,
ARG136 FLOAT,
ARG137 FLOAT,
ARG138 FLOAT,
ARG139 FLOAT,
ARG140 FLOAT,
ARG141 FLOAT,
ARG142 FLOAT,
ARG143 FLOAT,
ARG144 FLOAT,
ARG145 FLOAT,
ARG146 FLOAT,
ARG147 FLOAT,
ARG148 FLOAT,
ARG149 FLOAT,
ARG150 FLOAT,
ARG151 FLOAT,
ARG152 FLOAT,
ARG153 FLOAT,
ARG154 FLOAT,
ARG155 FLOAT,
ARG156 FLOAT,
ARG157 FLOAT,
ARG158 FLOAT,
ARG159 FLOAT,
ARG160 FLOAT,
ARG161 FLOAT,
ARG162 FLOAT,
ARG163 FLOAT,
ARG164 FLOAT,
ARG165 FLOAT,
ARG166 FLOAT,
ARG167 FLOAT,
ARG168 FLOAT,
ARG169 FLOAT,
ARG170 FLOAT,
ARG171 FLOAT,
ARG172 FLOAT,
ARG173 FLOAT,
ARG174 FLOAT,
ARG175 FLOAT,
ARG176 FLOAT,
ARG177 FLOAT,
ARG178 FLOAT,
ARG179 FLOAT,
ARG180 FLOAT,
ARG181 FLOAT,
ARG182 FLOAT,
ARG183 FLOAT,
ARG184 FLOAT,
ARG185 FLOAT,
ARG186 FLOAT,
ARG187 FLOAT,
ARG188 FLOAT,
ARG189 FLOAT,
ARG190 FLOAT,
ARG191 FLOAT,
ARG192 FLOAT,
ARG193 FLOAT,
ARG194 FLOAT,
ARG195 FLOAT,
ARG196 FLOAT,
ARG197 FLOAT,
ARG198 FLOAT,
ARG199 FLOAT,
ARG200 FLOAT,
ARG201 FLOAT,
ARG202 FLOAT,
ARG203 FLOAT,
ARG204 FLOAT,
ARG205 FLOAT,
ARG206 FLOAT,
ARG207 FLOAT,
ARG208 FLOAT,
ARG209 FLOAT,
ARG210 FLOAT,
ARG211 FLOAT,
ARG212 FLOAT,
ARG213 FLOAT,
ARG214 FLOAT,
ARG215 FLOAT,
ARG216 FLOAT,
ARG217 FLOAT,
ARG218 FLOAT,
ARG219 FLOAT,
ARG220 FLOAT,
ARG221 FLOAT,
ARG222 FLOAT,
ARG223 FLOAT,
ARG224 FLOAT,
ARG225 FLOAT,
ARG226 FLOAT,
ARG227 FLOAT,
ARG228 FLOAT,
ARG229 FLOAT,
ARG230 FLOAT,
ARG231 FLOAT,
ARG232 FLOAT,
ARG233 FLOAT,
ARG234 FLOAT,
ARG235 FLOAT,
ARG236 FLOAT,
ARG237 FLOAT,
ARG238 FLOAT,
ARG239 FLOAT,
ARG240 FLOAT,
ARG241 FLOAT,
ARG242 FLOAT,
ARG243 FLOAT,
ARG244 FLOAT,
ARG245 FLOAT,
ARG246 FLOAT,
ARG247 FLOAT,
ARG248 FLOAT,
ARG249 FLOAT,
ARG250 FLOAT,
ARG251 FLOAT,
ARG252 FLOAT,
ARG253 FLOAT,
ARG254 FLOAT,
ARG255 FLOAT,
ARG256 FLOAT,
ARG257 FLOAT,
ARG258 FLOAT,
ARG259 FLOAT,
ARG260 FLOAT,
ARG261 FLOAT,
ARG262 FLOAT,
ARG263 FLOAT,
ARG264 FLOAT,
ARG265 FLOAT,
ARG266 FLOAT,
ARG267 FLOAT,
ARG268 FLOAT,
ARG269 FLOAT,
ARG270 FLOAT,
ARG271 FLOAT,
ARG272 FLOAT,
ARG273 FLOAT,
ARG274 FLOAT,
ARG275 FLOAT,
ARG276 FLOAT,
ARG277 FLOAT,
ARG278 FLOAT,
ARG279 FLOAT,
ARG280 FLOAT,
ARG281 FLOAT,
ARG282 FLOAT,
ARG283 FLOAT,
ARG284 FLOAT,
ARG285 FLOAT,
ARG286 FLOAT,
ARG287 FLOAT,
ARG288 FLOAT,
ARG289 FLOAT,
ARG290 FLOAT,
ARG291 FLOAT,
ARG292 FLOAT,
ARG293 FLOAT,
ARG294 FLOAT,
ARG295 FLOAT,
ARG296 FLOAT,
ARG297 FLOAT,
ARG298 FLOAT,
ARG299 FLOAT,
ARG300 FLOAT,
ARG301 FLOAT,
ARG302 FLOAT,
ARG303 FLOAT,
ARG304 FLOAT,
ARG305 FLOAT,
ARG306 FLOAT,
ARG307 FLOAT,
ARG308 FLOAT,
ARG309 FLOAT,
ARG310 FLOAT,
ARG311 FLOAT,
ARG312 FLOAT,
ARG313 FLOAT,
ARG314 FLOAT,
ARG315 FLOAT,
ARG316 FLOAT,
ARG317 FLOAT,
ARG318 FLOAT,
ARG319 FLOAT,
ARG320 FLOAT,
ARG321 FLOAT,
ARG322 FLOAT,
ARG323 FLOAT,
ARG324 FLOAT,
ARG325 FLOAT,
ARG326 FLOAT,
ARG327 FLOAT,
ARG328 FLOAT,
ARG329 FLOAT,
ARG330 FLOAT,
ARG331 FLOAT,
ARG332 FLOAT,
ARG333 FLOAT,
ARG334 FLOAT,
ARG335 FLOAT,
ARG336 FLOAT,
ARG337 FLOAT,
ARG338 FLOAT,
ARG339 FLOAT,
ARG340 FLOAT,
ARG341 FLOAT,
ARG342 FLOAT,
ARG343 FLOAT,
ARG344 FLOAT,
ARG345 FLOAT,
ARG346 FLOAT,
ARG347 FLOAT,
ARG348 FLOAT,
ARG349 FLOAT,
ARG350 FLOAT,
ARG351 FLOAT,
ARG352 FLOAT,
ARG353 FLOAT,
ARG354 FLOAT,
ARG355 FLOAT,
ARG356 FLOAT,
ARG357 FLOAT,
ARG358 FLOAT,
ARG359 FLOAT,
ARG360 FLOAT,
ARG361 FLOAT,
ARG362 FLOAT,
ARG363 FLOAT,
ARG364 FLOAT,
ARG365 FLOAT,
ARG366 FLOAT,
ARG367 FLOAT,
ARG368 FLOAT,
ARG369 FLOAT,
ARG370 FLOAT,
ARG371 FLOAT,
ARG372 FLOAT,
ARG373 FLOAT,
ARG374 FLOAT,
ARG375 FLOAT,
ARG376 FLOAT,
ARG377 FLOAT,
ARG378 FLOAT,
ARG379 FLOAT,
ARG380 FLOAT,
ARG381 FLOAT,
ARG382 FLOAT,
ARG383 FLOAT,
ARG384 FLOAT,
ARG385 FLOAT,
ARG386 FLOAT,
ARG387 FLOAT,
ARG388 FLOAT,
ARG389 FLOAT,
ARG390 FLOAT,
ARG391 FLOAT,
ARG392 FLOAT,
ARG393 FLOAT,
ARG394 FLOAT,
ARG395 FLOAT,
ARG396 FLOAT,
ARG397 FLOAT,
ARG398 FLOAT,
ARG399 FLOAT,
ARG400 FLOAT,
ARG401 FLOAT,
ARG402 FLOAT,
ARG403 FLOAT,
ARG404 FLOAT,
ARG405 FLOAT,
ARG406 FLOAT,
ARG407 FLOAT,
ARG408 FLOAT,
ARG409 FLOAT,
ARG410 FLOAT,
ARG411 FLOAT,
ARG412 FLOAT,
ARG413 FLOAT,
ARG414 FLOAT,
ARG415 FLOAT,
ARG416 FLOAT,
ARG417 FLOAT,
ARG418 FLOAT,
ARG419 FLOAT,
ARG420 FLOAT,
ARG421 FLOAT,
ARG422 FLOAT,
ARG423 FLOAT,
ARG424 FLOAT,
ARG425 FLOAT,
ARG426 FLOAT,
ARG427 FLOAT,
ARG428 FLOAT,
ARG429 FLOAT,
ARG430 FLOAT,
ARG431 FLOAT,
ARG432 FLOAT,
ARG433 FLOAT,
ARG434 FLOAT,
ARG435 FLOAT,
ARG436 FLOAT,
ARG437 FLOAT,
ARG438 FLOAT,
ARG439 FLOAT,
ARG440 FLOAT,
ARG441 FLOAT,
ARG442 FLOAT,
ARG443 FLOAT,
ARG444 FLOAT,
ARG445 FLOAT,
ARG446 FLOAT,
ARG447 FLOAT,
ARG448 FLOAT,
ARG449 FLOAT,
ARG450 FLOAT,
ARG451 FLOAT,
ARG452 FLOAT,
ARG453 FLOAT,
ARG454 FLOAT,
ARG455 FLOAT,
ARG456 FLOAT,
ARG457 FLOAT,
ARG458 FLOAT,
ARG459 FLOAT,
ARG460 FLOAT,
ARG461 FLOAT,
ARG462 FLOAT,
ARG463 FLOAT,
ARG464 FLOAT,
ARG465 FLOAT,
ARG466 FLOAT,
ARG467 FLOAT,
ARG468 FLOAT,
ARG469 FLOAT)
returns string
language python
runtime_version=3.10
imports=('/model/model.joblib')
packages = ('pandas','joblib','cachetools','lightgbm', 'numpy', 'scikit-learn')
handler='batch_predict_cc_default'
as
$$
import sys
import pandas as pd
from joblib import load
import sklearn
from _snowflake import vectorized

@vectorized(input=pd.DataFrame)
def batch_predict_cc_default(test_df: pd.DataFrame) -> pd.Series:

    IMPORT_DIRECTORY_NAME = "snowflake_import_directory"
    import_dir = sys._xoptions[IMPORT_DIRECTORY_NAME]
    
    model_file = import_dir + 'model.joblib'
    model = load(model_file)
            
    test_df.columns = ['B_2_MIN',
 'B_4_MIN',
 'B_5_MIN',
 'B_9_MIN',
 'B_13_MIN',
 'B_14_MIN',
 'B_15_MIN',
 'B_16_MIN',
 'B_17_MIN',
 'B_19_MIN',
 'B_20_MIN',
 'B_28_MIN',
 'B_29_MIN',
 'B_33_MIN',
 'B_36_MIN',
 'B_42_MIN',
 'D_39_MIN',
 'D_41_MIN',
 'D_42_MIN',
 'D_45_MIN',
 'D_46_MIN',
 'D_48_MIN',
 'D_50_MIN',
 'D_51_MIN',
 'D_53_MIN',
 'D_55_MIN',
 'D_56_MIN',
 'D_58_MIN',
 'D_59_MIN',
 'D_60_MIN',
 'D_62_MIN',
 'D_70_MIN',
 'D_71_MIN',
 'D_74_MIN',
 'D_75_MIN',
 'D_78_MIN',
 'D_83_MIN',
 'D_102_MIN',
 'D_112_MIN',
 'D_113_MIN',
 'D_115_MIN',
 'D_118_MIN',
 'D_119_MIN',
 'D_121_MIN',
 'D_122_MIN',
 'D_128_MIN',
 'D_132_MIN',
 'D_140_MIN',
 'D_141_MIN',
 'D_144_MIN',
 'D_145_MIN',
 'P_2_MIN',
 'P_3_MIN',
 'R_1_MIN',
 'R_27_MIN',
 'S_3_MIN',
 'S_5_MIN',
 'S_7_MIN',
 'S_9_MIN',
 'S_11_MIN',
 'S_12_MIN',
 'S_23_MIN',
 'S_25_MIN',
 'B_1_AVG',
 'B_2_AVG',
 'B_3_AVG',
 'B_4_AVG',
 'B_5_AVG',
 'B_6_AVG',
 'B_8_AVG',
 'B_9_AVG',
 'B_10_AVG',
 'B_11_AVG',
 'B_12_AVG',
 'B_13_AVG',
 'B_14_AVG',
 'B_15_AVG',
 'B_16_AVG',
 'B_17_AVG',
 'B_18_AVG',
 'B_19_AVG',
 'B_20_AVG',
 'B_21_AVG',
 'B_22_AVG',
 'B_23_AVG',
 'B_24_AVG',
 'B_25_AVG',
 'B_28_AVG',
 'B_29_AVG',
 'B_30_AVG',
 'B_32_AVG',
 'B_33_AVG',
 'B_37_AVG',
 'B_38_AVG',
 'B_39_AVG',
 'B_40_AVG',
 'B_41_AVG',
 'B_42_AVG',
 'D_39_AVG',
 'D_41_AVG',
 'D_42_AVG',
 'D_43_AVG',
 'D_44_AVG',
 'D_45_AVG',
 'D_46_AVG',
 'D_47_AVG',
 'D_48_AVG',
 'D_50_AVG',
 'D_51_AVG',
 'D_53_AVG',
 'D_54_AVG',
 'D_55_AVG',
 'D_58_AVG',
 'D_59_AVG',
 'D_60_AVG',
 'D_61_AVG',
 'D_62_AVG',
 'D_65_AVG',
 'D_66_AVG',
 'D_69_AVG',
 'D_70_AVG',
 'D_71_AVG',
 'D_72_AVG',
 'D_73_AVG',
 'D_74_AVG',
 'D_75_AVG',
 'D_76_AVG',
 'D_77_AVG',
 'D_78_AVG',
 'D_80_AVG',
 'D_82_AVG',
 'D_84_AVG',
 'D_86_AVG',
 'D_91_AVG',
 'D_92_AVG',
 'D_94_AVG',
 'D_96_AVG',
 'D_103_AVG',
 'D_104_AVG',
 'D_108_AVG',
 'D_112_AVG',
 'D_113_AVG',
 'D_114_AVG',
 'D_115_AVG',
 'D_117_AVG',
 'D_118_AVG',
 'D_119_AVG',
 'D_120_AVG',
 'D_121_AVG',
 'D_122_AVG',
 'D_123_AVG',
 'D_124_AVG',
 'D_125_AVG',
 'D_126_AVG',
 'D_128_AVG',
 'D_129_AVG',
 'D_131_AVG',
 'D_132_AVG',
 'D_133_AVG',
 'D_134_AVG',
 'D_135_AVG',
 'D_136_AVG',
 'D_140_AVG',
 'D_141_AVG',
 'D_142_AVG',
 'D_144_AVG',
 'D_145_AVG',
 'P_2_AVG',
 'P_3_AVG',
 'P_4_AVG',
 'R_1_AVG',
 'R_2_AVG',
 'R_3_AVG',
 'R_7_AVG',
 'R_8_AVG',
 'R_9_AVG',
 'R_10_AVG',
 'R_11_AVG',
 'R_14_AVG',
 'R_15_AVG',
 'R_16_AVG',
 'R_17_AVG',
 'R_20_AVG',
 'R_21_AVG',
 'R_22_AVG',
 'R_24_AVG',
 'R_26_AVG',
 'R_27_AVG',
 'S_3_AVG',
 'S_5_AVG',
 'S_6_AVG',
 'S_7_AVG',
 'S_9_AVG',
 'S_11_AVG',
 'S_12_AVG',
 'S_13_AVG',
 'S_15_AVG',
 'S_16_AVG',
 'S_18_AVG',
 'S_22_AVG',
 'S_23_AVG',
 'S_25_AVG',
 'S_26_AVG',
 'B_1_MAX',
 'B_2_MAX',
 'B_3_MAX',
 'B_4_MAX',
 'B_5_MAX',
 'B_6_MAX',
 'B_7_MAX',
 'B_8_MAX',
 'B_9_MAX',
 'B_10_MAX',
 'B_12_MAX',
 'B_13_MAX',
 'B_14_MAX',
 'B_15_MAX',
 'B_16_MAX',
 'B_17_MAX',
 'B_18_MAX',
 'B_19_MAX',
 'B_21_MAX',
 'B_23_MAX',
 'B_24_MAX',
 'B_25_MAX',
 'B_29_MAX',
 'B_30_MAX',
 'B_33_MAX',
 'B_37_MAX',
 'B_38_MAX',
 'B_39_MAX',
 'B_40_MAX',
 'B_42_MAX',
 'D_39_MAX',
 'D_41_MAX',
 'D_42_MAX',
 'D_43_MAX',
 'D_44_MAX',
 'D_45_MAX',
 'D_46_MAX',
 'D_47_MAX',
 'D_48_MAX',
 'D_49_MAX',
 'D_50_MAX',
 'D_52_MAX',
 'D_55_MAX',
 'D_56_MAX',
 'D_58_MAX',
 'D_59_MAX',
 'D_60_MAX',
 'D_61_MAX',
 'D_63_MAX',
 'D_64_MAX',
 'D_65_MAX',
 'D_70_MAX',
 'D_71_MAX',
 'D_72_MAX',
 'D_73_MAX',
 'D_74_MAX',
 'D_76_MAX',
 'D_77_MAX',
 'D_78_MAX',
 'D_80_MAX',
 'D_82_MAX',
 'D_84_MAX',
 'D_91_MAX',
 'D_102_MAX',
 'D_105_MAX',
 'D_107_MAX',
 'D_110_MAX',
 'D_111_MAX',
 'D_112_MAX',
 'D_115_MAX',
 'D_116_MAX',
 'D_117_MAX',
 'D_118_MAX',
 'D_119_MAX',
 'D_121_MAX',
 'D_122_MAX',
 'D_123_MAX',
 'D_124_MAX',
 'D_125_MAX',
 'D_126_MAX',
 'D_128_MAX',
 'D_131_MAX',
 'D_132_MAX',
 'D_133_MAX',
 'D_134_MAX',
 'D_135_MAX',
 'D_136_MAX',
 'D_138_MAX',
 'D_140_MAX',
 'D_141_MAX',
 'D_142_MAX',
 'D_144_MAX',
 'D_145_MAX',
 'P_2_MAX',
 'P_3_MAX',
 'P_4_MAX',
 'R_1_MAX',
 'R_3_MAX',
 'R_5_MAX',
 'R_6_MAX',
 'R_7_MAX',
 'R_8_MAX',
 'R_10_MAX',
 'R_11_MAX',
 'R_14_MAX',
 'R_17_MAX',
 'R_20_MAX',
 'R_26_MAX',
 'R_27_MAX',
 'S_3_MAX',
 'S_5_MAX',
 'S_7_MAX',
 'S_8_MAX',
 'S_11_MAX',
 'S_12_MAX',
 'S_13_MAX',
 'S_15_MAX',
 'S_16_MAX',
 'S_22_MAX',
 'S_23_MAX',
 'S_24_MAX',
 'S_25_MAX',
 'S_26_MAX',
 'S_27_MAX',
 'B_1',
 'B_2',
 'B_3',
 'B_4',
 'B_5',
 'B_6',
 'B_7',
 'B_8',
 'B_9',
 'B_10',
 'B_11',
 'B_12',
 'B_13',
 'B_14',
 'B_15',
 'B_16',
 'B_17',
 'B_18',
 'B_19',
 'B_20',
 'B_21',
 'B_22',
 'B_23',
 'B_24',
 'B_25',
 'B_26',
 'B_28',
 'B_29',
 'B_30',
 'B_32',
 'B_33',
 'B_36',
 'B_37',
 'B_38',
 'B_39',
 'B_40',
 'B_41',
 'B_42',
 'D_39',
 'D_41',
 'D_42',
 'D_43',
 'D_44',
 'D_45',
 'D_46',
 'D_47',
 'D_48',
 'D_49',
 'D_50',
 'D_51',
 'D_52',
 'D_53',
 'D_54',
 'D_55',
 'D_56',
 'D_58',
 'D_59',
 'D_60',
 'D_61',
 'D_62',
 'D_63',
 'D_64',
 'D_65',
 'D_69',
 'D_70',
 'D_71',
 'D_72',
 'D_73',
 'D_75',
 'D_76',
 'D_77',
 'D_78',
 'D_79',
 'D_80',
 'D_81',
 'D_82',
 'D_83',
 'D_86',
 'D_91',
 'D_96',
 'D_105',
 'D_106',
 'D_112',
 'D_114',
 'D_119',
 'D_120',
 'D_121',
 'D_122',
 'D_124',
 'D_125',
 'D_126',
 'D_127',
 'D_130',
 'D_131',
 'D_132',
 'D_133',
 'D_134',
 'D_138',
 'D_140',
 'D_141',
 'D_142',
 'D_145',
 'P_2',
 'P_3',
 'P_4',
 'R_1',
 'R_2',
 'R_3',
 'R_4',
 'R_5',
 'R_6',
 'R_7',
 'R_8',
 'R_9',
 'R_10',
 'R_11',
 'R_12',
 'R_13',
 'R_14',
 'R_15',
 'R_19',
 'R_20',
 'R_26',
 'R_27',
 'S_3',
 'S_5',
 'S_6',
 'S_7',
 'S_8',
 'S_9',
 'S_11',
 'S_12',
 'S_13',
 'S_16',
 'S_19',
 'S_20',
 'S_22',
 'S_23',
 'S_24',
 'S_25',
 'S_26',
 'S_27']
    return model.predict(test_df) 
$$;

GRANT USAGE ON FUNCTION app.batch_predict_cc_defaultapp_public;

CREATE OR REPLACE PROCEDURE CORE.cc_batch_processing(rawTable VARCHAR, targetTable VARCHAR)
RETURNS STRING
LANGUAGE PYTHON
RUNTIME_VERSION = '3.8'
PACKAGES = ('snowflake-snowpark-python')
HANDLER = 'cc_batch_processing'
AS
$$
from snowflake.snowpark.functions import call_udf
import snowflake.snowpark.functions as F

def cc_batch_processing(session, raw_table, target_table):

    batch_df = session.table(raw_table)
    feature_cols = batch_df.columns
    feature_cols.remove('"customer_ID"')
    
    scored_data = batch_df.select('"customer_ID"', call_udf("app.batch_predict_cc_default", [F.col(c) for c in feature_cols]).alias('Prediction'))
    
    scored_data.write.save_as_table(target_table, mode="append")

    return "Success"
$$;

GRANT USAGE ON PROCEDURE CORE.cc_batch_processing(VARCHAR, VARCHAR) TO APPLICATION ROLE app_public;
